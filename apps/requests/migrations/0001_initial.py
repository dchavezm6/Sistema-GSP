# Generated by Django 4.2.7 on 2025-09-27 16:36

import apps.requests.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del Área')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
            ],
            options={
                'verbose_name': 'Área de Servicio',
                'verbose_name_plural': 'Áreas de Servicio',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del Servicio')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('icon_class', models.CharField(default='bi-wrench', help_text='Clase CSS del icono Bootstrap', max_length=50, verbose_name='Icono')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
            ],
            options={
                'verbose_name': 'Tipo de Servicio',
                'verbose_name_plural': 'Tipos de Servicios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(default=apps.requests.models.generate_ticket_number, max_length=20, unique=True, verbose_name='Número de Ticket')),
                ('request_type', models.CharField(choices=[('REPAIR', 'Reparación/Avería'), ('NEW_SERVICE', 'Nuevo Servicio'), ('MAINTENANCE', 'Mantenimiento'), ('COMPLAINT', 'Queja/Reclamo'), ('INFORMATION', 'Solicitud de Información')], max_length=20, verbose_name='Tipo de Solicitud')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descripción Detallada')),
                ('address', models.TextField(verbose_name='Dirección')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('IN_REVIEW', 'En Revisión'), ('APPROVED', 'Aprobada'), ('IN_PROGRESS', 'En Proceso'), ('COMPLETED', 'Completada'), ('REJECTED', 'Rechazada'), ('CANCELLED', 'Cancelada')], default='PENDING', max_length=20, verbose_name='Estado')),
                ('priority', models.CharField(choices=[('LOW', 'Baja'), ('MEDIUM', 'Media'), ('HIGH', 'Alta'), ('URGENT', 'Urgente')], default='MEDIUM', max_length=10, verbose_name='Prioridad')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('expected_completion', models.DateField(blank=True, null=True, verbose_name='Fecha Estimada de Finalización')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('citizen_phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono de Contacto')),
                ('citizen_email', models.EmailField(blank=True, max_length=254, verbose_name='Email de Contacto')),
                ('notes', models.TextField(blank=True, verbose_name='Notas Adicionales')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Costo Estimado')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Costo Real')),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['TECHNICIAN', 'MANAGER']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to=settings.AUTH_USER_MODEL, verbose_name='Asignado a')),
                ('citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Ciudadano')),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['MANAGER', 'AUTHORITY']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL, verbose_name='Revisado por')),
                ('service_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='requests.servicearea', verbose_name='Área de Servicio')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='requests.servicetype', verbose_name='Tipo de Servicio')),
            ],
            options={
                'verbose_name': 'Solicitud de Servicio',
                'verbose_name_plural': 'Solicitudes de Servicio',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(blank=True, choices=[('PENDING', 'Pendiente'), ('IN_REVIEW', 'En Revisión'), ('APPROVED', 'Aprobada'), ('IN_PROGRESS', 'En Proceso'), ('COMPLETED', 'Completada'), ('REJECTED', 'Rechazada'), ('CANCELLED', 'Cancelada')], max_length=20, null=True, verbose_name='Estado Anterior')),
                ('to_status', models.CharField(choices=[('PENDING', 'Pendiente'), ('IN_REVIEW', 'En Revisión'), ('APPROVED', 'Aprobada'), ('IN_PROGRESS', 'En Proceso'), ('COMPLETED', 'Completada'), ('REJECTED', 'Rechazada'), ('CANCELLED', 'Cancelada')], max_length=20, verbose_name='Nuevo Estado')),
                ('reason', models.TextField(blank=True, verbose_name='Motivo del Cambio')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del Cambio')),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Cambiado por')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='requests.servicerequest', verbose_name='Solicitud')),
            ],
            options={
                'verbose_name': 'Historial de Estado',
                'verbose_name_plural': 'Historial de Estados',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=apps.requests.models.request_image_path, verbose_name='Imagen')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Descripción')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Subida')),
                ('is_before', models.BooleanField(default=True, help_text='Marcar si es imagen antes del trabajo, desmarcar si es después', verbose_name='Imagen Antes del Trabajo')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='requests.servicerequest', verbose_name='Solicitud')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Subido por')),
            ],
            options={
                'verbose_name': 'Imagen de Solicitud',
                'verbose_name_plural': 'Imágenes de Solicitudes',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Comentario')),
                ('is_internal', models.BooleanField(default=False, help_text='Los comentarios internos solo son visibles para el personal municipal', verbose_name='Comentario Interno')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del Comentario')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='requests.servicerequest', verbose_name='Solicitud')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['status', 'created_at'], name='requests_se_status_6f6a49_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['citizen', 'status'], name='requests_se_citizen_5c624c_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['ticket_number'], name='requests_se_ticket__d9dbea_idx'),
        ),
    ]
